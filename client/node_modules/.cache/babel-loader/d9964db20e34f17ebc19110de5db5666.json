{"ast":null,"code":"const Reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        //get session user\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true\n      };\n\n    case \"LOGOUT\":\n      return {\n        user: null,\n        isFetching: false,\n        error: false\n      };\n\n    case \"UPDATE_START\":\n      return { ...state,\n        isFetching: true\n      };\n\n    case \"UPDATE_SUCCESS\":\n      return {\n        //get session user\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"UPDATE_FAILURE\":\n      return {\n        user: state.user,\n        isFetching: false,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/Users/elyes/Documents/GitHub/Blog/client/src/context/Reducer.js"],"names":["Reducer","state","action","type","user","isFetching","error","payload"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,aAAO;AACLC,QAAAA,IAAI,EAAC,IADA;AAELC,QAAAA,UAAU,EAAC,IAFN;AAGLC,QAAAA,KAAK,EAAC;AAHD,OAAP;;AAKJ,SAAK,eAAL;AACI,aAAO;AACP;AACIF,QAAAA,IAAI,EAACF,MAAM,CAACK,OAFT;AAGHF,QAAAA,UAAU,EAAC,KAHR;AAIHC,QAAAA,KAAK,EAAC;AAJH,OAAP;;AAOJ,SAAK,eAAL;AACI,aAAO;AACHF,QAAAA,IAAI,EAAC,IADF;AAEHC,QAAAA,UAAU,EAAC,KAFR;AAGHC,QAAAA,KAAK,EAAC;AAHH,OAAP;;AAKJ,SAAK,QAAL;AACI,aAAO;AACHF,QAAAA,IAAI,EAAC,IADF;AAEHC,QAAAA,UAAU,EAAC,KAFR;AAGHC,QAAAA,KAAK,EAAC;AAHH,OAAP;;AAKJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHI,QAAAA,UAAU,EAAC;AAFR,OAAP;;AAIJ,SAAK,gBAAL;AACI,aAAO;AACP;AACID,QAAAA,IAAI,EAACF,MAAM,CAACK,OAFT;AAGHF,QAAAA,UAAU,EAAC,KAHR;AAIHC,QAAAA,KAAK,EAAC;AAJH,OAAP;;AAOJ,SAAK,gBAAL;AACI,aAAO;AACHF,QAAAA,IAAI,EAACH,KAAK,CAACG,IADR;AAEHC,QAAAA,UAAU,EAAC,KAFR;AAGHC,QAAAA,KAAK,EAAC;AAHH,OAAP;;AAKJ;AACI,aAAOL,KAAP;AA/CR;AAiDH,CAlDD;;KAAMD,O;AAoDN,eAAeA,OAAf","sourcesContent":["const Reducer = (state, action) => {\n    switch(action.type){\n        case \"LOGIN_START\":\n            return {\n              user:null,\n              isFetching:true,\n              error:false\n            };\n        case \"LOGIN_SUCCESS\":\n            return {\n            //get session user\n                user:action.payload,\n                isFetching:false,\n                error:false\n            };\n    \n        case \"LOGIN_FAILURE\":\n            return {\n                user:null,\n                isFetching:false,\n                error:true\n            };\n        case \"LOGOUT\":\n            return {\n                user:null,\n                isFetching:false,\n                error:false\n            };\n        case \"UPDATE_START\":\n            return {\n                ...state,\n                isFetching:true,\n            };\n        case \"UPDATE_SUCCESS\":\n            return {\n            //get session user\n                user:action.payload,\n                isFetching:false,\n                error:false\n            };\n    \n        case \"UPDATE_FAILURE\":\n            return {\n                user:state.user,\n                isFetching:false,\n                error:true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Reducer;"]},"metadata":{},"sourceType":"module"}