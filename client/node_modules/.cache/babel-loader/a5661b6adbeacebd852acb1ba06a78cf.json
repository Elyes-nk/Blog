{"ast":null,"code":"var _jsxFileName = \"/Users/elyes/Documents/GitHub/Blog/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport { useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const PublicFolder = \"http://localhost:5000/img/\";\n  const {\n    user\n  } = useContext(Context);\n  const {\n    post,\n    setPost\n  } = useState({});\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  const location = useLocation();\n  const path = location.pathname.split('/')[2];\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path, setPost]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(\"/posts/\" + path, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n\n  const handleEdit = async () => {\n    try {\n      await axios.put(\"/posts/\" + path, {\n        username: user.username,\n        title: title,\n        desc: desc\n      });\n      setUpdateMode(false);\n    } catch (error) {} //128\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"singlePostTitleInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"singlePostAuthor\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"link\",\n              to: `/?username=${post.username}`,\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(post.createdAt).toDateString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleEdit,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"9mZU6c03Ve7Kci8123gDQJsrlfo=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/elyes/Documents/GitHub/Blog/client/src/components/singlePost/SinglePost.jsx"],"names":["Link","React","useEffect","useState","useContext","Context","useLocation","axios","SinglePost","PublicFolder","user","post","setPost","title","setTitle","desc","setDesc","updateMode","setUpdateMode","location","path","pathname","split","getPost","res","get","data","handleDelete","delete","username","window","replace","error","handleEdit","put","e","target","value","Date","createdAt","toDateString"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,YAAY,GAAG,4BAArB;AAEA,QAAM;AAACC,IAAAA;AAAD,MAASN,UAAU,CAACC,OAAD,CAAzB;AACA,QAAM;AAACM,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMgB,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAb;AAEApB,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMqB,OAAO,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,YAAYL,IAAtB,CAAlB;AACAR,MAAAA,OAAO,CAACY,GAAG,CAACE,IAAL,CAAP;AACAZ,MAAAA,QAAQ,CAACU,GAAG,CAACE,IAAJ,CAASb,KAAV,CAAR;AACAG,MAAAA,OAAO,CAACQ,GAAG,CAACE,IAAJ,CAASX,IAAV,CAAP;AACD,KALD;;AAMAQ,IAAAA,OAAO;AACR,GARQ,EAQP,CAACH,IAAD,EAAOR,OAAP,CARO,CAAT;;AAWA,QAAMe,YAAY,GAAG,YAAW;AAC9B,QAAI;AACF,YAAMpB,KAAK,CAACqB,MAAN,CAAa,YAAYR,IAAzB,EAA+B;AAACM,QAAAA,IAAI,EAAG;AAAEG,UAAAA,QAAQ,EAACnB,IAAI,CAACmB;AAAhB;AAAR,OAA/B,CAAN;AACAC,MAAAA,MAAM,CAACX,QAAP,CAAgBY,OAAhB,CAAwB,GAAxB;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc,CAAG;AACpB,GALD;;AAMA,QAAMC,UAAU,GAAG,YAAW;AAC5B,QAAI;AACF,YAAM1B,KAAK,CAAC2B,GAAN,CAAU,YAAYd,IAAtB,EAA4B;AAAES,QAAAA,QAAQ,EAACnB,IAAI,CAACmB,QAAhB;AAA0BhB,QAAAA,KAAK,EAACA,KAAhC;AAAuCE,QAAAA,IAAI,EAACA;AAA5C,OAA5B,CAAN;AACAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHD,CAGE,OAAOc,KAAP,EAAc,CAAG,CAJS,CAK5B;;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,iBAGGf,UAAU,gBACP;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,KAAK,EAAEJ,KAFP;AAGA,QAAA,QAAQ,EAAGsB,CAAD,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHvB;AAIA,QAAA,SAAS,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,cADO,gBAQT;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBACCxB,KADD,EAECF,IAAI,CAACkB,QAAL,MAAkBnB,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEmB,QAAxB,kBACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,4BADZ;AAEE,YAAA,OAAO,EAAEF;AAFX;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AACE,YAAA,SAAS,EAAC,iCADZ;AAEE,YAAA,OAAO,EAAE,MAAIT,aAAa,CAAC,IAAD;AAF5B;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eA6BE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAA,6CAEE;AAAG,YAAA,SAAS,EAAC,kBAAb;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAuB,cAAA,EAAE,EAAG,cAAaP,IAAI,CAACkB,QAAS,EAAvD;AAAA,wBACGlB,IAAI,CAACkB;AADR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA,oBAAO,IAAIS,IAAJ,CAAS3B,IAAI,CAAC4B,SAAd,EAAyBC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF,EAyCGvB,UAAU,gBACT;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,KAAK,EAAEF,IAFT;AAGE,QAAA,QAAQ,EAAGoB,CAAD,IAAKnB,OAAO,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHxB;AAAA;AAAA;AAAA;AAAA,cADS,gBAOT;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,kBACEtB;AADF;AAAA;AAAA;AAAA;AAAA,cAhDJ,EAqDEE,UAAU,iBACR;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,OAAO,EAAEgB,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmED;;GAxGuBzB,U;UAULF,W;;;KAVKE,U","sourcesContent":["import { Link } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport React, {useEffect, useState, useContext} from \"react\";\nimport { Context } from \"../../context/Context\";\nimport { useLocation } from \"react-router\";\nimport axios from \"axios\";\n\nexport default function SinglePost() {\n  const PublicFolder = \"http://localhost:5000/img/\";\n\n  const {user} = useContext(Context);\n  const {post, setPost} = useState({});\n\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  const location = useLocation();\n  const path = location.pathname.split('/')[2];\n\n  useEffect(()=> {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    }\n    getPost();\n  },[path, setPost]);\n\n\n  const handleDelete = async() => {\n    try {\n      await axios.delete(\"/posts/\" + path, {data : { username:user.username }});\n      window.location.replace(\"/\");\n    } catch (error) { }\n  }\n  const handleEdit = async() => {\n    try {\n      await axios.put(\"/posts/\" + path, { username:user.username, title:title, desc:desc});\n      setUpdateMode(false);\n    } catch (error) { }\n    //128\n  }\n  return (\n    <div className=\"singlePost\">\n      <div className=\"singlePostWrapper\">\n      \n        \n        {updateMode ? (\n            <input \n            type=\"text\" \n            value={title}\n            onChange={(e)=>setTitle(e.target.value)}\n            className=\"singlePostTitleInput\"\n          />\n        ):(\n          <h1 className=\"singlePostTitle\">\n          {title}\n          {post.username === user?.username && (\n            <div className=\"singlePostEdit\">\n              <i \n                className=\"singlePostIcon far fa-edit\"\n                onClick={handleDelete}\n              ></i>\n              <i \n                className=\"singlePostIcon far fa-trash-alt\"\n                onClick={()=>setUpdateMode(true)}\n              ></i>\n            </div>\n          )}\n          </h1>\n        )}\n\n\n        <div className=\"singlePostInfo\">\n          <span>\n            Author:\n            <b className=\"singlePostAuthor\">\n              <Link className=\"link\" to={`/?username=${post.username}`}>\n                {post.username}\n              </Link>\n            </b>\n          </span>\n          <span>{new Date(post.createdAt).toDateString}</span>\n        </div>\n\n        {updateMode ? (\n          <textarea \n            className=\"singlePostDescInput\" \n            value={desc} \n            onChange={(e)=>setDesc(e.target.value)}\n          />\n        ) : (\n          <p className=\"singlePostDesc\">\n           {desc}\n          </p>\n        )}\n\n       {updateMode && ( \n          <button \n            className=\"singlePostButton\"\n            onClick={handleEdit}\n          >\n            Update\n          </button>\n        )}\n       \n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}